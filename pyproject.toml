[tool.poetry]
name = "application-portal"
version = "0.1.0"
description = "The application portal for WaffleHacks"
authors = ["WaffleHacks Technology Team <technology@wafflehacks.tech>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.10"
pydantic = {version = "^1.10.7", extras = ["dotenv", "email"]}
SQLAlchemy = {version = ">=1.4.17,<=1.4.41", extras = ["mypy", "asyncio"]}
alembic = {version = "^1.10.3", extras = ["tz"]}
sqlmodel = "^0.0.8"
asyncpg = "^0.27.0"
fastapi = "^0.95.1"
ujson = "^5.7.0"
uvicorn = {version = "^0.21.1", extras = ["standard"]}
aiohttp = {version = "^3.8.4", extras = ["speedups"]}
boto3 = "^1.26.115"
click = "^8.1.3"
algoliasearch = "^3.0.0"
gunicorn = "^20.1.0"
wafflehacks-mailer = "^0.2.2"
opentelemetry-api = "^1.17.0"
opentelemetry-sdk = "^1.17.0"
opentelemetry-exporter-otlp-proto-grpc = "^1.17.0"
opentelemetry-instrumentation-fastapi = "0.38b0"
opentelemetry-instrumentation-sqlalchemy = "0.38b0"
opentelemetry-instrumentation-aiohttp-client = "0.38b0"
opentelemetry-instrumentation-botocore = "0.38b0"
protobuf = "4.22.3"
nanoid = "^2.0.0"
pytz = "^2023.3"
nats-py = "^2.2.0"
redis = {version = "^4.5.4", extras = ["hiredis"]}

[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
isort = "^5.12.0"
mypy = "^1.2.0"
pre-commit = "^3.2.2"
sqlalchemy2-stubs = "^0.0.2a34"
ipython = "^8.12.0"
boto3-stubs-lite = {version = "^1.26.115", extras = ["s3", "sqs"]}
types-ujson = "^5.7.0.3"
types-pytz = "^2023.3.0.0"
types-redis = "^4.5.4.1"

[tool.isort]
profile = "black"

[tool.mypy]
python_version = "3.10"
plugins = ["pydantic.mypy", "sqlalchemy.ext.mypy.plugin"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
